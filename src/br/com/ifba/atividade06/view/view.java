/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.com.ifba.atividade06.view;
import java.util.Arrays;
import javax.swing.DefaultListModel;
/**
 *
 * @author Casa
 */
public class view extends javax.swing.JFrame {

    String vetor[] = new String[10];
    
    int posSelecionada = -1;
   
    
     DefaultListModel<String> listModel = new DefaultListModel<>();
    
    public view() {
        initComponents();
        
        // associar o modelo da minha lista as configuraçoes da listModel
        lstvetLista.setModel(listModel);
        
        for(int i=0; i<10; i++){
            vetor[i] = "0"; 
            listModel.addElement("[" + i + "] -> " + vetor[i]); 
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstvetLista = new javax.swing.JList<>();
        btnAdicionar = new javax.swing.JButton();
        btnRemover = new javax.swing.JButton();
        btnOrdenar = new javax.swing.JButton();
        spnNumero = new javax.swing.JSpinner();
        lblcontroledeErros = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lstvetLista.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstvetLista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstvetListaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(lstvetLista);

        btnAdicionar.setText("Adicionar");
        btnAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarActionPerformed(evt);
            }
        });

        btnRemover.setText("Remover");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        btnOrdenar.setText("Ordenar");
        btnOrdenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdenarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(spnNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnRemover)
                        .addComponent(btnOrdenar, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnAdicionar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblcontroledeErros)
                .addGap(111, 111, 111))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(btnAdicionar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnRemover)
                            .addComponent(spnNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnOrdenar))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblcontroledeErros)
                        .addGap(9, 9, 9)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarActionPerformed
       if(posSelecionada == -1){//como nao há posiçao -1 em nada ira interferir nofuncionamento

           lblcontroledeErros.setText("Nenhuma posição selecionada");
           return; //encerra o metodo
           }
       
       int numSelecionado = (Integer) spnNumero.getValue();
       String valorAtual = vetor[posSelecionada];
       String novoValor = Integer.toString(numSelecionado);
       
        if(novoValor.equals(valorAtual)) {//verifico se o numero escolhido é igual ao que já existe na posiçao
        lblcontroledeErros.setText("Valor já existe nesta posição");
        return;
    }
        
        vetor[posSelecionada] = Integer.toString(numSelecionado);
        
       //limpar a lista
       listModel.clear();
       
       for(int i=0; i<10; i++){ 
            listModel.addElement("[" + i + "] -> " + vetor[i]); 
        }
 
       lblcontroledeErros.setText("Adição bem-sucedida");
       
       posSelecionada =  -1;//resetar para que o controle de seleçao funcione normalmente
       
    }//GEN-LAST:event_btnAdicionarActionPerformed

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
      if(posSelecionada == -1){//como nao há posiçao -1 em nada ira interferir nofuncionamento

           lblcontroledeErros.setText("Nenhuma posição selecionada");

           }
      
      vetor[posSelecionada] = "0";
      
      listModel.clear();
       
       for(int i=0; i<10; i++){ 
            listModel.addElement("[" + i + "] -> " + vetor[i]); 
        } 
 
       lblcontroledeErros.setText("Remoção bem-sucedida");
       
       posSelecionada =  -1;
      
    }//GEN-LAST:event_btnRemoverActionPerformed
//verificar se ja esta ordenado o vetor
    public boolean estaOrdenadoCrescente(String[] vetor) {
    for (int i = 0; i < vetor.length - 1; i++) {
        // converter os valores para inteiro antes de comparar
        int atual = Integer.parseInt(vetor[i]);
        int proximo = Integer.parseInt(vetor[i + 1]);
        
        if (atual > proximo) {
            return false; 
        }
    }
    return true;
}
    
    private void btnOrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrdenarActionPerformed

        if(estaOrdenadoCrescente(vetor) == false){//vetor nao ordenado
        
        Arrays.sort(vetor);//organizar vetor
        
        listModel.clear();
       
       for(int i=0; i<10; i++){ 
            listModel.addElement("[" + i + "] -> " + vetor[i]); 
        }
        }
        
        else {//vetor ordernado
        lblcontroledeErros.setText("Vetor já ordenado");
        }
    }//GEN-LAST:event_btnOrdenarActionPerformed

    private void lstvetListaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstvetListaMouseClicked
        
        posSelecionada = lstvetLista.getSelectedIndex();
        
    }//GEN-LAST:event_lstvetListaMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(view.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new view().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionar;
    private javax.swing.JButton btnOrdenar;
    private javax.swing.JButton btnRemover;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblcontroledeErros;
    private javax.swing.JList<String> lstvetLista;
    private javax.swing.JSpinner spnNumero;
    // End of variables declaration//GEN-END:variables
}
